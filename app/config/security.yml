# you can read more about security in the related section of the documentation
# http://symfony.com/doc/current/book/security.html
security:
    # http://symfony.com/doc/current/book/security.html#encoding-the-user-s-password
    encoders:
        Symfony\Component\Security\Core\User\User: plaintext

    # http://symfony.com/doc/current/book/security.html#hierarchical-roles
    role_hierarchy:
        ROLE_USER:        [ROLE_USER]
        ROLE_ADMIN:       [ROLE_USER, ROLE_ADMIN]
        ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    # http://symfony.com/doc/current/book/security.html#where-do-users-come-from-user-providers
    providers:
        in_memory:
            memory:
                users:
                    user:  { password: userpass, roles: [ 'ROLE_USER' ] }
                    admin: { password: adminpass, roles: [ 'ROLE_ADMIN' ] }

    # the main part of the security, where you can set up firewalls
    # for specific sections of your app
    firewalls:
            
        # secures part of the application
        secured_area:
            anonymous: true
            pattern:    ^/*
            security: true
            
            form_login:
                login_path: login
                check_path: login_check
             
            logout: ~
        # backend:
        #     pattern:    /admin
        #     security:   true
        #     logout:     true

        default:
            anonymous: ~
            # http_basic is a stateless auth, meaning the server cannot log the user out as it is not responsible
            # for remembering he is logged in.
            http_basic: ~


        # disables authentication for assets and the profiler, adapt it according to your needs
#        dev:
 #           pattern:  ^/(_(profiler|wdt)|css|images|js)/
  #          security: false

    # with these settings you can restrict or allow access for different parts
    # of your application based on roles, ip, host or methods
    # http://symfony.com/doc/current/cookbook/security/access_control.html
    access_control:
        - { path: ^/secured_area, roles: ROLE_USER }
        - { path: ^/admin, roles: ROLE_ADMIN}
        # example :- { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }
